apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.orpheusdroid.screenrecorder"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 35
        versionName "3.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            lintOptions {
                disable 'MissingTranslation'
            }
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "tier"

    productFlavors {
        playstore {
            dimension "tier"
            versionNameSuffix ' - playstore'
            buildConfigField "String", "APP_PUB_KEY", getAppKey("app_pub_key")
        }
        fdroid {
            dimension "tier"
            versionNameSuffix ' - fdroid'
        }
        playstoreDonate {
            dimension "tier"
            versionNameSuffix ' - playstore Donate'
            applicationIdSuffix '.donate'
            buildConfigField "String", "APP_PUB_KEY", getAppKey("app_pub_key_donate")
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

static def getAppKey(String property) {
    Properties properties = new Properties()
    properties.load(new FileInputStream("app_pub_key"))
    return "\"" + properties.getProperty(property) + "\""
}

if (project.hasProperty('RELEASE_STORE_FILE')) {
    println 'Using release keys'
    android.signingConfigs.release.storeFile new File(RELEASE_STORE_FILE)
    android.signingConfigs.release.storePassword RELEASE_STORE_PASSWORD
    android.signingConfigs.release.keyAlias RELEASE_KEY_ALIAS
    android.signingConfigs.release.keyPassword RELEASE_KEY_PASSWORD
} else {
    println 'Release keys not found. Falling back to default config'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    /*implementation "androidx.camera:camera-camera2:1.0.0-beta05"
    implementation "androidx.camera:camera-view:1.0.0-alpha12"
    implementation "com.github.topjohnwu.libsu:core:2.5.1"*/
    implementation "com.leinardi.android:speed-dial:3.2.0"
    implementation "io.reactivex.rxjava3:rxjava:3.0.4"
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'com.facebook.shimmer:shimmer:0.5.0'
//     implementation 'ly.count.android:sdk:20.04.2'
//     implementation 'com.orpheusdroid.crashreporter:crashreporter:1.0.4'
    implementation 'com.airbnb.android:lottie:3.4.1'
    implementation ("com.github.bumptech.glide:glide:4.11.0") {
        exclude group: "com.android.support"
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    playstoreImplementation 'org.solovyev.android:checkout:1.2.1'
    playstoreDonateImplementation 'org.solovyev.android:checkout:1.2.1'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
